#!/bin/sh

# Slackware build script for <gcc>

# Written by Evgeny Ratnikov (ratnikov dot ev at gmail dot com)

PRGNAM=gcc
PKGNAM=gcc_full
VERSION=${VERSION:-4.6.3}
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

CWD=$(pwd)
TMP=${TMP:-/tmp/$TAG}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
fi
TARGET=$ARCH-slackware-linux

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
[ "$TEST_BUILD" ] || chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

(
  mkdir gcc.build.lnx
  cd gcc.build.lnx;
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  ../configure \
    --prefix=/usr \
    --libdir=/usr/lib$LIBDIRSUFFIX \
    --mandir=/usr/man \
    --infodir=/usr/info \
    --enable-shared \
    --enable-bootstrap \
    --enable-languages=c,c++ \
    --enable-threads=posix \
    --enable-checking=release \
    --with-system-zlib \
    --with-python-dir=/lib$LIBDIRSUFFIX/python2.6/site-packages \
    --disable-libunwind-exceptions \
    --enable-__cxa_atexit \
    --enable-libssp \
    --enable-lto \
    --with-gnu-ld \
    --verbose \
    --with-arch-directory=$ARCH \
    --disable-gtktest \
    --with-arch=$ARCH \
    --target=${TARGET} \
    --build=${TARGET} \
    --host=${TARGET}

  [ "$JOBS" ] && make -j$JOBS || make
  make info
  make install DESTDIR=$PKG
)
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*gdb.py

VERSIONED="gcc g++ gcov cpp"
( cd $PKG/ust/bin
  for f in $VERSIONED; do
    mv $f $f-$VERSION
    ln -s $f-VERSION $f
  done
)

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
  find . -name "lib*so*" -exec strip --strip-unneeded "{}" \;
  find . -name "lib*a" -exec strip -g "{}" \;
  strip --strip-unneeded usr/bin/* 2> /dev/null
)

# This is provided by binutils, so delete it here:
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libiberty.a
rm -f $PKG/usr/lib/libiberty.a

( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \;
  for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
  for f in $VERSIONED; do
    mv $f.1.gz $f-$VERSION.1.gz
    ln -s $f.1.gz-VERSION $f.1.gz
  done
)

gzip -9 $PKG/usr/info/*.info*

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a ABOUT-NLS COPYING* ChangeLog MAINTAINERS NEWS README $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PRGNAM-$VERSION/slack-desc

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.txz

