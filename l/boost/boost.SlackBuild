#!/bin/sh

# Slackware build script for boost

PRGNAM=boost
VERSION=${VERSION:-1_37_0}
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

CWD=$(pwd)
TMP=${TMP:-/tmp/$TAG}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

ICU=${ICU:-NO}
PKG_VERSION=$(echo $VERSION | tr '_' '.')	# Leave this alone

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf ${PRGNAM}_$VERSION
tar xvf $CWD/${PRGNAM}_$VERSION.tar.bz2
cd ${PRGNAM}_$VERSION

[ "$TEST_BUILD" ] || chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

if [ "$ICU" = "YES" ]; then
    do_icu="-sICU_PATH=/usr"
else
    do_icu=""
fi

# This is the python we build against:
PYTHON_VERSION=$(python -c 'import sys; print sys.version[:3]')
PYTHON_FLAGS="-sPYTHON_ROOT=/usr -sPYTHON_VERSION=$PYTHON_VERSION"

# First build bjam, the boost build system:
cd tools/jam/src
  CFLAGS="$SLKCFLAGS -fno-strict-aliasing" CC=gcc ./build.sh cc
cd -

BJAM=$(find tools/jam/src/ -name bjam -a -type f)

mkdir obj

$BJAM \
  release \
  "-sNO_COMPRESSION=0" \
  "-sZLIB_INCLUDE=/usr/include" \
  "-sZLIB_LIBPATH=/usr/lib" \
  "-sBZIP2_INCLUDE=/usr/include" \
  "-sBZIP2_LIBPATH=/usr/lib" \
  "-sEXPAT_INCLUDE=/usr/include" \
  "-sEXPAT_LIBPATH=/usr/lib" \
  --toolset=gcc \
  --layout=system \
  --builddir=obj \
  --prefix=/usr \
  $PYTHON_FLAGS \
  $do_icu \
  -j${JOBS}

mkdir -p $PKG/usr/{lib,include}

$BJAM \
  release \
  "-sEXPAT_INCLUDE=/usr/include" \
  "-sEXPAT_LIBPATH=/usr/lib" \
  --toolset=gcc \
  --layout=system \
  --builddir=obj \
  --prefix=$PKG/usr \
  $PYTHON_FLAGS \
  $do_icu \
  install

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

mkdir -p $PKG/usr/doc/$PRGNAM-$PKG_VERSION
cp -a LICENSE_1_0.txt INSTALL $PKG/usr/doc/$PRGNAM-$PKG_VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$PKG_VERSION/$PRGNAM.SlackBuild
cat $CWD/$PRGNAM.slack-desc > $PKG/usr/doc/$PRGNAM-$PKG_VERSION/$PRGNAM.slack-desc

mkdir -p $PKG/install
cat $CWD/$PRGNAM.slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$PKG_VERSION-$ARCH-$BUILD$TAG.tgz

